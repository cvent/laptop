#!/usr/bin/env bash

# Welcome to the thoughtbot laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.


# This is an adaptation that uses the .bashrc file by default but if zsh is enabled it
# will add things to the .zshrc file

shellrc="$HOME/.bashrc"
if [[ "$SHELL" = "/bin/zsh" ]]; then
  echo "Using .zshrc instead of .bashrc"
  shellrc="$HOME/.zshrc"
fi

fancy_echo() {
  printf "\n%b\n" "$1"
}

append_to_shellrc() {
  local text="$1"
  local skip_new_line="$2"

  if ! grep -Fqs "$text" "$shellrc"; then
    if (( skip_new_line )); then
      printf "%s\n" "$text" >> "$shellrc"
    else
      printf "\n%s\n" "$text" >> "$shellrc"
    fi
  fi
}

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [[ ! -d "$HOME/.bin/" ]]; then
  mkdir "$HOME/.bin"
fi

if [[ ! -f "$shellrc" ]]; then
  touch "$shellrc"
fi

append_to_shellrc 'export PATH="$HOME/.bin:$PATH"'

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      brew upgrade "$@"
    fi
  else
    brew install "$@"
  fi
}

brew_cask_install() {
  if brew_cask_is_installed "$1"; then
    echo "$1 already installed, if you need to upgrade do it manually"
  else
    brew cask install "$@"
  fi
}

brew_cask_is_installed() {
  local name="$(brew_cask_expand_alias "$1")"

  brew cask list -1 | grep -Fqx "$name"
}

brew_is_installed() {
  local name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$name"
}

command_exists() {
  local command="$1"

  command -v $command >/dev/null
}

brew_is_upgradable() {
  local name="$(brew_expand_alias "$1")"

  brew outdated --quiet "$name" >/dev/null
  [[ $? -ne 0 ]]
}

brew_tap_if_untapped() {
  if ! brew tap | grep -Fqx "$1"; then
    brew tap $1
  fi
}

brew_cask_expand_alias() {
  brew cask info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

if ! command_exists 'brew'; then
  fancy_echo "Installing Homebrew, a good OS X package manager ..."
    ruby <(curl -fsS https://raw.githubusercontent.com/Homebrew/install/master/install)

    append_to_shellrc '# recommended by brew doctor'
    append_to_shellrc 'export PATH="/usr/local/bin:$PATH"' 1
    export PATH="/usr/local/bin:$PATH"
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update

fancy_echo "Installing vim from Homebrew to get the latest version ..."
  brew_install_or_upgrade 'vim'

fancy_echo "Installing git from Homebrew to get the latest version ..."
  brew_install_or_upgrade 'git'

node_version="0.11"

fancy_echo "Installing NVM, Node.js, and NPM, for running apps and installing JavaScript packages ..."
  brew_install_or_upgrade 'nvm'

  append_to_shellrc 'export PATH="$PATH:/usr/local/lib/node_modules"'
  append_to_shellrc 'source $(brew --prefix nvm)/nvm.sh' 1

  source $(brew --prefix nvm)/nvm.sh
  nvm install "$node_version"

  fancy_echo "Setting $node_version as the global default nodejs..."
  nvm alias default "$node_version"

fancy_echo "Installing Homebrew Cask to allow installing of apps"
  brew_tap_if_untapped 'caskroom/cask'
  brew_install_or_upgrade 'brew-cask'
  brew cask update

fancy_echo "Installing Virtual box "
  brew_cask_install 'virtualbox'

fancy_echo "Installing slack "
  brew_cask_install 'slack'

fancy_echo "Installing docker from Homebrew to get the latest version ..."
  brew_install_or_upgrade 'docker'

fancy_echo "Installing boot2docker from Homebrew to get the latest version ..."
  brew_install_or_upgrade 'boot2docker'

fancy_echo "Installing fig from Homebrew to get the latest version ..."
  brew_install_or_upgrade 'fig'

source ~/.bashrc

fancy_echo "Installing your personal additions from ~/.laptop.local ..."
  if [[ -f ~/.laptop.local ]]; then
    source ~/.laptop.local
  fi
